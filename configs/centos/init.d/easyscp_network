#!/bin/sh

# EasySCP a Virtual Hosting Control Panel
# Copyright (C) 2010-2013 by Easy Server Control Panel - http://www.easyscp.net
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# @link 		http://www.easyscp.net
# @author 		EasySCP Team

### BEGIN INIT INFO
# Provides:             easyscp_network
# Required-Start:       $network $local_fs $remote_fs
# Required-Stop:
# Should-Stop:          $local_fs
# chkconfig: 			- 85 15
# pidfile: 				/var/run/easyscp.pid
# config:  				/etc/easyscp/easyscp.conf
# Short-Description:    EasySCP Network Traffic Logger
#
### END INIT INFO
# Note: do not modify any of these vars here, use /etc/default/$NAME instead

PATH=/sbin:/bin:/usr/sbin:/usr/bin
DESC="EasySCP Network Traffic Logger"
NAME=easyscp_network
LFILE=/var/run/$NAME
IPTABLES=/sbin/iptables
ENGINEPATH="/var/www/easyscp/engine"
ENGINETOOLSPATH=${ENGINEPATH}"/tools"
NETWORKCARDMANAGER="easyscp-net-interfaces-mngr"
LOGDIR=/var/log/easyscp
LOGFILE=${LOGDIR}/${NAME}.log

START=1

# To monitor more ports, edit SERVICES variable add your own ports
# (ftp, proxy, http, etc.)
#
# HTTP(S): 80 443
# POP3(S): 110 995
# IMAP4(S)): 143 993
# MAIL(S): 25 465 587
SERVICES="80 443 110 143 25 465 587 995 993"
# To monitor more outgoing ports, edit SERVICES_OUT variable add your own ports
# (mail, etc.)
#
# MAIL(S): 25 465 587
SERVICES_OUT="25 465 587"

umask 027

# Read config file if it is present.
if [ -r /etc/default/$NAME ]; then
	. /etc/default/$NAME
fi

if [ $START -eq 0 ]; then
	echo "$DESC: not starting, edit /etc/default/$NAME."
	exit 0
fi

add_rules() {
	${IPTABLES} -N EASYSCP_INPUT 2>> "${LOG_DIR}/${NAME}.err.log"
	${IPTABLES} -N EASYSCP_OUTPUT 2>> "${LOG_DIR}/${NAME}.err.log"

	# All traffic should jump through EASYSCP tables before anything else
	${IPTABLES} -I INPUT -j EASYSCP_INPUT 2>> "${LOG_DIR}/${NAME}.err.log"
	${IPTABLES} -I OUTPUT -j EASYSCP_OUTPUT 2>> "${LOG_DIR}/${NAME}.err.log"

	# Services from matrix basically receiving data
	for PORT in $SERVICES; do
		${IPTABLES} -I EASYSCP_INPUT  -p tcp --dport "$PORT" 2>> "$LOGFILE"
		${IPTABLES} -I EASYSCP_OUTPUT -p tcp --sport "$PORT" 2>> "$LOGFILE"
	done

	# Services from matrix basically sending data
	for PORT in $SERVICES_OUT; do
		${IPTABLES} -I EASYSCP_INPUT  -p tcp --sport "$PORT" 2>> "$LOGFILE"
		${IPTABLES} -I EASYSCP_OUTPUT -p tcp --dport "$PORT" 2>> "$LOGFILE"
	done

	# Explicit return once done
	${IPTABLES} -A EASYSCP_INPUT  -j RETURN
	${IPTABLES} -A EASYSCP_OUTPUT -j RETURN

	# Touch lock file
	touch $LFILE
}

remove_rules() {
	${IPTABLES} -D INPUT -j EASYSCP_INPUT 2>> "${LOG_DIR}/${NAME}.err.log"
	${IPTABLES} -D OUTPUT -j EASYSCP_OUTPUT 2>> "${LOG_DIR}/${NAME}.err.log"
	${IPTABLES} -F EASYSCP_INPUT 2>> "${LOG_DIR}/${NAME}.err.log"
	${IPTABLES} -F EASYSCP_OUTPUT 2>> "${LOG_DIR}/${NAME}.err.log"
	${IPTABLES} -X EASYSCP_INPUT 2>> "${LOG_DIR}/${NAME}.err.log"
	${IPTABLES} -X EASYSCP_OUTPUT 2>> "${LOG_DIR}/${NAME}.err.log"

	# Remove lock file
	rm $LFILE
}

add_interfaces() {
	${ENGINETOOLSPATH}/${NETWORKCARDMANAGER} start >${LOGDIR}/${NETWORKCARDMANAGER}.log 2>&1
}

remove_interfaces() {
	${ENGINETOOLSPATH}/${NETWORKCARDMANAGER} stop >${LOGDIR}/${NETWORKCARDMANAGER}.log 2>&1
}

case "$1" in
  start)
	echo -n "Starting $DESC:"
	if [ -e $LFILE ]; then
	   echo " ${NAME} is already started" >&2
	   exit 1
	fi
	add_interfaces
	add_rules
	echo " $NAME."
	;;
  stop)
	echo -n "Stopping $DESC:"
	if [ ! -e $LFILE ]; then
	   echo "${NAME} is already stopped" >&2
	   exit 1
	fi
	remove_rules
	remove_interfaces
	echo " $NAME."
	;;
  restart|force-reload)
	echo -n "Restarting $DESC:"
	if [ ! -e $LFILE ]; then
	   echo "${NAME} is already stopped" >&2
	else
	   remove_rules
	   remove_interfaces
	   sleep 2
	fi
	add_interfaces
	add_rules
	echo " $NAME."
	;;
  status)
	if [ ! -e $LFILE ]; then
	   echo "${NAME} is stopped"
	else
	   echo "${NAME} is started"
	   exit 0
	fi
	;;
  *)
	echo "Usage: /etc/init.d/$NAME {start|stop|restart|force-reload}" >&2
	exit 1
	;;
esac

exit 0
